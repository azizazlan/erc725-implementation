{
  "contractName": "ERC725",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "ContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_operation",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_operation",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "_value",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_value",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_operation\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_operation\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"_value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_value\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>\",\"details\":\"Bundles ERC725X and ERC725Y together into one smart contract\",\"methods\":{\"constructor\":{\"params\":{\"_newOwner\":\"the owner of the contract.\"}},\"execute(uint256,address,uint256,bytes)\":{\"params\":{\"_data\":\"the call data, or the contract data to deploy\",\"_operation\":\"the operation to execute: CALL = 0; DELEGATECALL = 1; CREATE2 = 2; CREATE = 3;\",\"_to\":\"the smart contract or address to interact with. `_to` will be unused if a contract is created (operation 2 and 3)\",\"_value\":\"the value of ETH to transfer\"}},\"getData(bytes32)\":{\"params\":{\"_key\":\"the key which value to retrieve\"},\"returns\":{\"_value\":\"The date stored at the key\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"params\":{\"_key\":\"the key which value to retrieve\",\"_value\":\"the bytes to set.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ERC725 bundle\"},\"userdoc\":{\"methods\":{\"constructor\":\"Sets the owner of the contract\",\"execute(uint256,address,uint256,bytes)\":{\"notice\":\"Executes any other smart contract. Is only callable by the owner.\"},\"getData(bytes32)\":{\"notice\":\"Gets data at a given `key`\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets data at a given `key`\"}}}},\"settings\":{\"compilationTarget\":{\"erc725/contracts/ERC725/ERC725.sol\":\"ERC725\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x16926b3c19504ea52f73abe41dfa9c1ef9c328d6088b82162d475caecaa47a6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc578656a08c07f33ecf4a54324bad5f951afdcd990cdab1dcde493d6bb49d9c\",\"dweb:/ipfs/QmbXLJtTaqBg7WwC4p9gsRjA3VEwNwGc6W9afJeAaacF71\"]},\"erc725/contracts/ERC725/ERC725.sol\":{\"keccak256\":\"0x2f4c86aee485c8761f91fba3444d81ced03660bc7640188b7b5d53951b8a71eb\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://0daebb33d45e58345880f5c1b03c5500dfe0c7741768f680fb9d292ae574d8b4\",\"dweb:/ipfs/QmQFsjACDGndDdMV5qRm7L8m9mtYrv1Ndm7F462HjusjX8\"]},\"erc725/contracts/ERC725/ERC725X.sol\":{\"keccak256\":\"0xbd5e811d6820825bc2971d5fd56e56a0baf7d08238badb3bf4b7a621980fa98b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0ff9079562c3542b55bf3806f8c4277e81a7993864f9651c1ea53f5dacc0f712\",\"dweb:/ipfs/QmfV5JYw2dbL2ovfQn6DfhpsUiPBPRopExH3pH9bV9wuhZ\"]},\"erc725/contracts/ERC725/ERC725Y.sol\":{\"keccak256\":\"0xba4a76264dc55dd3e080fd40c2796f3fbc83108ffcf66f27123a2cac84e4c020\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0a4c2e2e9a12162a5779c69ef835f21e8f7787b73482de069dfb7f43591df3f3\",\"dweb:/ipfs/QmaQ8Yc14YuRnZgsW3kdGSC4b1c28HbXFBg8PYGFyDmSPB\"]},\"erc725/contracts/ERC725/IERC725X.sol\":{\"keccak256\":\"0x54f9f7a3a82af5a49c4d27988f60e6ff6088b9c93675035b49bcf6a4ec576663\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://925e9a88ffb2f4d0d6ccc765e8dbc16fba05a04689819191d1da06a2ad5bd885\",\"dweb:/ipfs/QmPrSQAgU4RLKtxTAHB6RsNbXk8UwvTuG4NyqR7iCCQqSx\"]},\"erc725/contracts/ERC725/IERC725Y.sol\":{\"keccak256\":\"0xeb78f2558cc7df0910dc4d491d7f6457771a4b08a26bc02c4c7aacd0f30eac76\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://63c12d228c53f7399966f93094a92f5c8eb92cab2318c8df800e104694cb30e8\",\"dweb:/ipfs/QmQjKnsPKwXcK9QvS7QTzmSxsEoZ5cRrNQQkzu7kwn91MY\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xd6de53e5467708105d5f6ea98c56882dba0023a6d634cdb3bd03d89ac0d75ae2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://96dfff2330d3835fb00bb7db9ba962a98b049fe7b31cecfcfd11849b997efdf8\",\"dweb:/ipfs/QmVQHbSiWSrFLXaRriAMkYnoNeHJaoqSACdjqoNX7HxJGQ\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200198138038062001981833981810160405260208110156200003757600080fd5b81019080805190602001909291905050508081620000626301ffc9a760e01b620001f660201b60201c565b600062000074620002ff60201b60201c565b905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620001236200030760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001685762000167816200033160201b60201c565b5b620001806344c028fe60e01b620001f660201b60201c565b50620001916200030760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001d657620001d5816200033160201b60201c565b5b620001ee632bd57b7360e01b620001f660201b60201c565b50506200054c565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b62000341620002ff60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200048c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806200195b6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6113ff806200055c6000396000f3fe6080604052600436106100705760003560e01c8063715018a61161004e578063715018a61461028a5780637f23690c146102a15780638da5cb5b14610373578063f2fde38b146103ca57610070565b806301ffc9a71461007557806344c028fe146100e757806354f6127f146101d6575b600080fd5b34801561008157600080fd5b506100cd6004803603602081101561009857600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061041b565b604051808215151515815260200191505060405180910390f35b6101d4600480360360808110156100fd57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561014e57600080fd5b82018360208201111561016057600080fd5b8035906020019184600183028401116401000000008311171561018257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610482565b005b3480156101e257600080fd5b5061020f600480360360208110156101f957600080fd5b810190808035906020019092919050505061073e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561024f578082015181840152602081019050610234565b50505050905090810190601f16801561027c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561029657600080fd5b5061029f6107f3565b005b3480156102ad57600080fd5b50610371600480360360408110156102c457600080fd5b8101908080359060200190929190803590602001906401000000008111156102eb57600080fd5b8201836020820111156102fd57600080fd5b8035906020019184600183028401116401000000008311171561031f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061097e565b005b34801561037f57600080fd5b50610388610b11565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103d657600080fd5b50610419600480360360208110156103ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b3b565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b61048a610d4b565b73ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461054c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b818373ffffffffffffffffffffffffffffffffffffffff16857f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8846040518080602001828103825283818151815260200191508051906020019080838360005b838110156105c75780820151818401526020810190506105ac565b50505050905090810190601f1680156105f45780820380516001836020036101000a031916815260200191505b509250505060405180910390a460006109c45a03905060008514156106255761061f84848484610d53565b50610737565b600385141561063e576106388383610d6c565b50610736565b60028514156106c7576000610657836020855103610e64565b9050606061066b8460006020875103610f6e565b9050600061067a868484611154565b90508073ffffffffffffffffffffffffffffffffffffffff167fcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca31260405160405180910390a2505050610735565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f57726f6e67206f7065726174696f6e207479706500000000000000000000000081525060200191505060405180910390fd5b5b5b5050505050565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107e75780601f106107bc576101008083540402835291602001916107e7565b820191906000526020600020905b8154815290600101906020018083116107ca57829003601f168201915b50505050509050919050565b6107fb610d4b565b73ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610986610d4b565b73ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600260008481526020019081526020016000209080519060200190610a6f9291906112fe565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ad3578082015181840152602081019050610ab8565b50505050905090810190601f168015610b005780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b43610d4b565b73ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806113a46026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000806000845160208601878987f19050949350505050565b600081516020830184f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e1b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f436f756c64206e6f74206465706c6f7920636f6e74726163740000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff167fcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca31260405160405180910390a292915050565b600081602083011015610edf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f746f427974657333325f6f766572666c6f77000000000000000000000000000081525060200191505060405180910390fd5b6020820183511015610f59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f427974657333325f6f75744f66426f756e6473000000000000000000000081525060200191505060405180910390fd5b60008260208501015190508091505092915050565b606081601f83011015610fe9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f736c6963655f6f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b828284011015611061576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f736c6963655f6f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b818301845110156110da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f736c6963655f6f75744f66426f756e647300000000000000000000000000000081525060200191505060405180910390fd5b60608215600081146110f757604051915060208201604052611148565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156111355780518352602083019250602081019050611118565b50868552601f19601f8301166040525050505b50809150509392505050565b600080844710156111cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f437265617465323a20696e73756666696369656e742062616c616e636500000081525060200191505060405180910390fd5b600083511415611245576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f437265617465323a2062797465636f6465206c656e677468206973207a65726f81525060200191505060405180910390fd5b8383516020850187f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f437265617465323a204661696c6564206f6e206465706c6f790000000000000081525060200191505060405180910390fd5b809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061133f57805160ff191683800117855561136d565b8280016001018555821561136d579182015b8281111561136c578251825591602001919060010190611351565b5b50905061137a919061137e565b5090565b6113a091905b8082111561139c576000816000905550600101611384565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220209c2a4291857d2277f10b21e59559e100c1dc7a84154af8f452c7ccdebfbe2f64736f6c634300060a00334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063715018a61161004e578063715018a61461028a5780637f23690c146102a15780638da5cb5b14610373578063f2fde38b146103ca57610070565b806301ffc9a71461007557806344c028fe146100e757806354f6127f146101d6575b600080fd5b34801561008157600080fd5b506100cd6004803603602081101561009857600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061041b565b604051808215151515815260200191505060405180910390f35b6101d4600480360360808110156100fd57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561014e57600080fd5b82018360208201111561016057600080fd5b8035906020019184600183028401116401000000008311171561018257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610482565b005b3480156101e257600080fd5b5061020f600480360360208110156101f957600080fd5b810190808035906020019092919050505061073e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561024f578082015181840152602081019050610234565b50505050905090810190601f16801561027c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561029657600080fd5b5061029f6107f3565b005b3480156102ad57600080fd5b50610371600480360360408110156102c457600080fd5b8101908080359060200190929190803590602001906401000000008111156102eb57600080fd5b8201836020820111156102fd57600080fd5b8035906020019184600183028401116401000000008311171561031f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061097e565b005b34801561037f57600080fd5b50610388610b11565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103d657600080fd5b50610419600480360360208110156103ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b3b565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b61048a610d4b565b73ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461054c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b818373ffffffffffffffffffffffffffffffffffffffff16857f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8846040518080602001828103825283818151815260200191508051906020019080838360005b838110156105c75780820151818401526020810190506105ac565b50505050905090810190601f1680156105f45780820380516001836020036101000a031916815260200191505b509250505060405180910390a460006109c45a03905060008514156106255761061f84848484610d53565b50610737565b600385141561063e576106388383610d6c565b50610736565b60028514156106c7576000610657836020855103610e64565b9050606061066b8460006020875103610f6e565b9050600061067a868484611154565b90508073ffffffffffffffffffffffffffffffffffffffff167fcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca31260405160405180910390a2505050610735565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f57726f6e67206f7065726174696f6e207479706500000000000000000000000081525060200191505060405180910390fd5b5b5b5050505050565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107e75780601f106107bc576101008083540402835291602001916107e7565b820191906000526020600020905b8154815290600101906020018083116107ca57829003601f168201915b50505050509050919050565b6107fb610d4b565b73ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610986610d4b565b73ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600260008481526020019081526020016000209080519060200190610a6f9291906112fe565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ad3578082015181840152602081019050610ab8565b50505050905090810190601f168015610b005780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b43610d4b565b73ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806113a46026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000806000845160208601878987f19050949350505050565b600081516020830184f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e1b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f436f756c64206e6f74206465706c6f7920636f6e74726163740000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff167fcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca31260405160405180910390a292915050565b600081602083011015610edf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f746f427974657333325f6f766572666c6f77000000000000000000000000000081525060200191505060405180910390fd5b6020820183511015610f59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f427974657333325f6f75744f66426f756e6473000000000000000000000081525060200191505060405180910390fd5b60008260208501015190508091505092915050565b606081601f83011015610fe9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f736c6963655f6f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b828284011015611061576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f736c6963655f6f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b818301845110156110da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f736c6963655f6f75744f66426f756e647300000000000000000000000000000081525060200191505060405180910390fd5b60608215600081146110f757604051915060208201604052611148565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156111355780518352602083019250602081019050611118565b50868552601f19601f8301166040525050505b50809150509392505050565b600080844710156111cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f437265617465323a20696e73756666696369656e742062616c616e636500000081525060200191505060405180910390fd5b600083511415611245576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f437265617465323a2062797465636f6465206c656e677468206973207a65726f81525060200191505060405180910390fd5b8383516020850187f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f437265617465323a204661696c6564206f6e206465706c6f790000000000000081525060200191505060405180910390fd5b809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061133f57805160ff191683800117855561136d565b8280016001018555821561136d579182015b8281111561136c578251825591602001919060010190611351565b5b50905061137a919061137e565b5090565b6113a091905b8082111561139c576000816000905550600101611384565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220209c2a4291857d2277f10b21e59559e100c1dc7a84154af8f452c7ccdebfbe2f64736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "280:332:8:-:0;;;437:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;503:9;480;751:40:5;418:10;770:20;;751:18;;;:40;;:::i;:::-;865:17:3;885:12;:10;;;:12;;:::i;:::-;865:32;;916:9;907:6;;:18;;;;;;;;;;;;;;;;;;973:9;940:43;;969:1;940:43;;;;;;;;;;;;831:159;1461:7:10;:5;;;:7;;:::i;:::-;1448:20;;:9;:20;;;1445:78;;1484:28;1502:9;1484:17;;;:28;;:::i;:::-;1445:78;1533:41;971:10;1552:21;;1533:18;;;:41;;:::i;:::-;1279:302;1135:7:11;:5;;;:7;;:::i;:::-;1122:20;;:9;:20;;;1119:78;;1158:28;1176:9;1158:17;;;:28;;:::i;:::-;1119:78;1207:41;776:10;1226:21;;1207:18;;;:41;;:::i;:::-;953:302;437:90:8;280:332;;1482:198:5;1580:10;1565:25;;:11;:25;;;;;1557:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1669:4;1633:20;:33;1654:11;1633:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1482:198;:::o;590:104:2:-;643:15;677:10;670:17;;590:104;:::o;1066:77:3:-;1104:7;1130:6;;;;;;;;;;;1123:13;;1066:77;:::o;1983:240::-;1280:12;:10;;;:12;;:::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:8;2151:38;;2172:6;;;;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;;:17;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;280:332:8:-;;;;;;;",
  "deployedSourceMap": "280:332:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:140:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2078:1331:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1447:149:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:145:3;;;;;;;;;;;;;:::i;:::-;;1750:185:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1066:77:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1983:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;948:140:5;1025:4;1048:20;:33;1069:11;1048:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1041:40;;948:140;;;:::o;2078:1331:10:-;1280:12:3;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2283:6:10::1;2278:3;2257:40;;2266:10;2257:40;2291:5;2257:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2308:13;2336:4;2324:9;:16;2308:32;;1022:1;2371:10;:28;2367:1036;;;2415:38;2427:3;2432:6;2440:5;2447;2415:11;:38::i;:::-;;2367:1036;;;1158:1;2905:10;:30;2901:502;;;2951:28;2965:6;2973:5;2951:13;:28::i;:::-;;2901:502;;;1115:1;3020:10;:31;3016:387;;;3067:12;3082:44;3101:5;3123:2;3108:5;:12;:17;3082:18;:44::i;:::-;3067:59;;3140:17;3160:43;3175:5;3182:1;3200:2;3185:5;:12;:17;3160:14;:43::i;:::-;3140:63;;3218:23;3244:34;3259:6;3267:4;3273;3244:14;:34::i;:::-;3218:60;;3314:15;3298:32;;;;;;;;;;;;3016:387;;;;;;3362:30;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;3016:387;2901:502;2367:1036;1339:1:3;2078:1331:10::0;;;;:::o;1447:149:11:-;1536:19;1578:5;:11;1584:4;1578:11;;;;;;;;;;;1571:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:149;;;:::o;1689:145:3:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:1:::1;1758:40;;1779:6;;;;;;;;;;;1758:40;;;;;;;;;;;;1825:1;1808:6;;:19;;;;;;;;;;;;;;;;;;1689:145::o:0;1750:185:11:-;1280:12:3;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:6:11::1;1868:5;:11;1874:4;1868:11;;;;;;;;;;;:20;;;;;;;;;;;;:::i;:::-;;1915:4;1903:25;1921:6;1903:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1750:185:::0;;:::o;1066:77:3:-;1104:7;1130:6;;;;;;;;;;;1123:13;;1066:77;:::o;1983:240::-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:8;2151:38;;2172:6;;;;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;;:17;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;590:104:2:-;643:15;677:10;670:17;;590:104;:::o;3567:308:10:-;3675:12;3857:1;3854;3847:4;3841:11;3834:4;3828;3824:15;3817:5;3813:2;3806:5;3801:58;3790:69;;3776:93;;;;;;:::o;4440:425::-;4533:19;4717:14;4711:21;4704:4;4688:14;4684:25;4677:5;4670:63;4655:78;;4783:1;4760:25;;:11;:25;;;;4752:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4846:11;4830:28;;;;;;;;;;;;4440:425;;;;:::o;15180:382:16:-;15259:7;15301:6;15295:2;15286:6;:11;:21;;15278:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15374:2;15365:6;:11;15348:6;:13;:28;;15340:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15412:19;15509:6;15502:4;15494:6;15490:17;15486:30;15480:37;15465:52;;15544:11;15537:18;;;15180:382;;;;:::o;9457:2684::-;9603:12;9655:7;9649:2;9639:7;:12;:23;;9631:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9719:6;9708:7;9699:6;:16;:26;;9691:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9788:7;9779:6;:16;9762:6;:13;:33;;9754:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9828:22;9898:7;9891:15;9924:1;9919:1967;;;;12027:4;12021:11;12008:24;;12078:4;12067:9;12063:20;12057:4;12050:34;9884:2214;;9919:1967;10101:4;10095:11;10082:24;;10760:2;10751:7;10747:16;11142:9;11135:17;11129:4;11125:28;11113:9;11102;11098:25;11094:60;11190:7;11186:2;11182:16;11442:6;11428:9;11421:17;11415:4;11411:28;11399:9;11391:6;11387:22;11383:57;11379:70;11216:425;11475:3;11471:2;11468:11;11216:425;;;11619:2;11613:9;11609:2;11602:21;11516:4;11512:2;11508:13;11502:19;;11556:4;11552:2;11548:13;11542:19;;11216:425;;;11220:247;11677:7;11666:9;11659:26;11867:2;11863:7;11858:2;11854;11850:11;11846:25;11840:4;11833:39;9926:1960;;;9884:2214;;12125:9;12118:16;;;9457:2684;;;;;:::o;1013:535:7:-;1100:7;1119:12;1174:6;1149:21;:31;;1141:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:1;1232:8;:15;:20;;1224:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1440:4;1429:8;1423:15;1416:4;1406:8;1402:19;1394:6;1386:59;1378:67;;1488:1;1472:18;;:4;:18;;;;1464:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:4;1530:11;;;1013:535;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.6.0;\n\n// modules\nimport \"./ERC725X.sol\";\nimport \"./ERC725Y.sol\";\n\n/**\n * @title ERC725 bundle\n * @dev Bundles ERC725X and ERC725Y together into one smart contract\n *\n *  @author Fabian Vogelsteller <fabian@lukso.network>\n */\ncontract ERC725 is ERC725X, ERC725Y  {\n\n    /**\n     * @notice Sets the owner of the contract\n     * @param _newOwner the owner of the contract.\n     */\n    constructor(address _newOwner)\n    ERC725X(_newOwner)\n    ERC725Y(_newOwner)\n    public {}\n\n    // NOTE this implementation has not by default: receive() external payable {}\n}\n",
  "sourcePath": "erc725/contracts/ERC725/ERC725.sol",
  "ast": {
    "absolutePath": "erc725/contracts/ERC725/ERC725.sol",
    "exportedSymbols": {
      "ERC725": [
        482
      ]
    },
    "id": 483,
    "license": "CC0-1.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 461,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:8"
      },
      {
        "absolutePath": "erc725/contracts/ERC725/ERC725X.sol",
        "file": "./ERC725X.sol",
        "id": 462,
        "nodeType": "ImportDirective",
        "scope": 483,
        "sourceUnit": 803,
        "src": "72:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "erc725/contracts/ERC725/ERC725Y.sol",
        "file": "./ERC725Y.sol",
        "id": 463,
        "nodeType": "ImportDirective",
        "scope": 483,
        "sourceUnit": 881,
        "src": "96:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 465,
              "name": "ERC725X",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 802,
              "src": "299:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC725X_$802",
                "typeString": "contract ERC725X"
              }
            },
            "id": 466,
            "nodeType": "InheritanceSpecifier",
            "src": "299:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 467,
              "name": "ERC725Y",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 880,
              "src": "308:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC725Y_$880",
                "typeString": "contract ERC725Y"
              }
            },
            "id": 468,
            "nodeType": "InheritanceSpecifier",
            "src": "308:7:8"
          }
        ],
        "contractDependencies": [
          75,
          184,
          339,
          351,
          802,
          880,
          912,
          939
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 464,
          "nodeType": "StructuredDocumentation",
          "src": "121:158:8",
          "text": " @title ERC725 bundle\n @dev Bundles ERC725X and ERC725Y together into one smart contract\n  @author Fabian Vogelsteller <fabian@lukso.network>"
        },
        "fullyImplemented": true,
        "id": 482,
        "linearizedBaseContracts": [
          482,
          880,
          939,
          802,
          912,
          184,
          75,
          339,
          351
        ],
        "name": "ERC725",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "525:2:8",
              "statements": []
            },
            "documentation": {
              "id": 469,
              "nodeType": "StructuredDocumentation",
              "src": "324:108:8",
              "text": " @notice Sets the owner of the contract\n @param _newOwner the owner of the contract."
            },
            "id": 481,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 474,
                    "name": "_newOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 471,
                    "src": "480:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 475,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 473,
                  "name": "ERC725X",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 802,
                  "src": "472:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC725X_$802_$",
                    "typeString": "type(contract ERC725X)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "472:18:8"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 477,
                    "name": "_newOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 471,
                    "src": "503:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 476,
                  "name": "ERC725Y",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 880,
                  "src": "495:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC725Y_$880_$",
                    "typeString": "type(contract ERC725Y)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "495:18:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 471,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 481,
                  "src": "449:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "448:19:8"
            },
            "returnParameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:0:8"
            },
            "scope": 482,
            "src": "437:90:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 483,
        "src": "280:332:8"
      }
    ],
    "src": "36:577:8"
  },
  "legacyAST": {
    "absolutePath": "erc725/contracts/ERC725/ERC725.sol",
    "exportedSymbols": {
      "ERC725": [
        482
      ]
    },
    "id": 483,
    "license": "CC0-1.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 461,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:8"
      },
      {
        "absolutePath": "erc725/contracts/ERC725/ERC725X.sol",
        "file": "./ERC725X.sol",
        "id": 462,
        "nodeType": "ImportDirective",
        "scope": 483,
        "sourceUnit": 803,
        "src": "72:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "erc725/contracts/ERC725/ERC725Y.sol",
        "file": "./ERC725Y.sol",
        "id": 463,
        "nodeType": "ImportDirective",
        "scope": 483,
        "sourceUnit": 881,
        "src": "96:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 465,
              "name": "ERC725X",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 802,
              "src": "299:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC725X_$802",
                "typeString": "contract ERC725X"
              }
            },
            "id": 466,
            "nodeType": "InheritanceSpecifier",
            "src": "299:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 467,
              "name": "ERC725Y",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 880,
              "src": "308:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC725Y_$880",
                "typeString": "contract ERC725Y"
              }
            },
            "id": 468,
            "nodeType": "InheritanceSpecifier",
            "src": "308:7:8"
          }
        ],
        "contractDependencies": [
          75,
          184,
          339,
          351,
          802,
          880,
          912,
          939
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 464,
          "nodeType": "StructuredDocumentation",
          "src": "121:158:8",
          "text": " @title ERC725 bundle\n @dev Bundles ERC725X and ERC725Y together into one smart contract\n  @author Fabian Vogelsteller <fabian@lukso.network>"
        },
        "fullyImplemented": true,
        "id": 482,
        "linearizedBaseContracts": [
          482,
          880,
          939,
          802,
          912,
          184,
          75,
          339,
          351
        ],
        "name": "ERC725",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "525:2:8",
              "statements": []
            },
            "documentation": {
              "id": 469,
              "nodeType": "StructuredDocumentation",
              "src": "324:108:8",
              "text": " @notice Sets the owner of the contract\n @param _newOwner the owner of the contract."
            },
            "id": 481,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 474,
                    "name": "_newOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 471,
                    "src": "480:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 475,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 473,
                  "name": "ERC725X",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 802,
                  "src": "472:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC725X_$802_$",
                    "typeString": "type(contract ERC725X)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "472:18:8"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 477,
                    "name": "_newOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 471,
                    "src": "503:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 476,
                  "name": "ERC725Y",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 880,
                  "src": "495:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC725Y_$880_$",
                    "typeString": "type(contract ERC725Y)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "495:18:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 471,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 481,
                  "src": "449:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "448:19:8"
            },
            "returnParameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:0:8"
            },
            "scope": 482,
            "src": "437:90:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 483,
        "src": "280:332:8"
      }
    ],
    "src": "36:577:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-26T05:22:23.796Z",
  "devdoc": {
    "author": "Fabian Vogelsteller <fabian@lukso.network>",
    "details": "Bundles ERC725X and ERC725Y together into one smart contract",
    "methods": {
      "constructor": {
        "params": {
          "_newOwner": "the owner of the contract."
        }
      },
      "execute(uint256,address,uint256,bytes)": {
        "params": {
          "_data": "the call data, or the contract data to deploy",
          "_operation": "the operation to execute: CALL = 0; DELEGATECALL = 1; CREATE2 = 2; CREATE = 3;",
          "_to": "the smart contract or address to interact with. `_to` will be unused if a contract is created (operation 2 and 3)",
          "_value": "the value of ETH to transfer"
        }
      },
      "getData(bytes32)": {
        "params": {
          "_key": "the key which value to retrieve"
        },
        "returns": {
          "_value": "The date stored at the key"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setData(bytes32,bytes)": {
        "params": {
          "_key": "the key which value to retrieve",
          "_value": "the bytes to set."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "ERC725 bundle"
  },
  "userdoc": {
    "methods": {
      "constructor": "Sets the owner of the contract",
      "execute(uint256,address,uint256,bytes)": {
        "notice": "Executes any other smart contract. Is only callable by the owner."
      },
      "getData(bytes32)": {
        "notice": "Gets data at a given `key`"
      },
      "setData(bytes32,bytes)": {
        "notice": "Sets data at a given `key`"
      }
    }
  }
}